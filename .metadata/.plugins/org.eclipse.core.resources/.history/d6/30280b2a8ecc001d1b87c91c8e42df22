/*
 * SWITCH.h
 *
 *  Created on: Feb 23, 2023
 *      Author: samir
 */

#ifndef SWITCH_H_
#define SWITCH_H_


/*******************************************Includes*******************************************************/
#include "Bit_math.h"
#include "Std_types.h"

#include "../CFG/SWITCH_cfg.h"
#include "GPIO/GPIO.h"
/*******************************************************************************************************/
/******************************************* Macros ****************************************************/
/******************************************************************************************************/
typedef enum {
	SWC_STATUS_NOTPREESED,
	SWC_STATUS_PREESED
}SWC_STATUS_t;

typedef enum{
	PULL_DOWN_SWC_STATUS,
	PULL_UP_SWC_STATUS
}SWC_PULL_t;


/**********************************************************************************************************/
/**********************************************END********************x *************************************/
/**********************************************************************************************************/


/******************************************************************************************************/
/******************************************* Types ****************************************************/
/******************************************************************************************************/
typedef enum {
    SWC_OK,
    SWC_NOTOK,
    SWC_NULLPOINTER
}SWITCH_ErrorStatus_t;


typedef struct
{
    void*  port;
    u32  pin;
    u32  mode;
    SWITCH_names_t   name;
    u8* description;
    u8  inti_state;
    u8 pull;
}SWITCH_cfg_t;

/**********************************************************************************************************/
/***************************************************END****************************************************/
/**********************************************************************************************************/

/*************************************************** Varibles *********************************************/
extern const SWITCH_cfg_t SWC_cfg[SWCS_COUNT]; 

/************************************************ APIs ***************************************************/
/*                                                                                                       */

/***************************************************************************************/
/*                                SWC_init     function                                */
/***************************************************************************************/
/*  Description: used to initialize SWITCHS                                            */
/* 	input:       void                                                                  */
/* 	return:      SWITCH_ErrorStatus_t                                                  */
/***************************************************************************************/
SWITCH_ErrorStatus_t SWC_init(void);



/***************************************************************************************/
/*                                SWC_getState     function                            */
/***************************************************************************************/
/*  Description: used to Get SWITCH STATE (Pressed , not Pressed)                      */
/* 	input:       state ,       SWITCH_names_t                                          */
/* 	return:      SWITCH_ErrorStatus_t                                                  */
/***************************************************************************************/
SWITCH_ErrorStatus_t SWC_getState(SWITCH_names_t SWC,u32* state);




/**********************************************************************************************************/
/***************************************************END****************************************************/
/**********************************************************************************************************/




#endif /* SWITCH_H_ */
